# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.13.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.13.0/opc_1.13.0_darwin_arm64.tar.gz"
      sha256 "21bc5d0c95a0d9a2425a8817e11e37bb17b2ba7dd83252a804771ee3f2fc7305"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.13.0/opc_1.13.0_darwin_x86_64.tar.gz"
      sha256 "7ac4b2f4369fd058a3a4965f9ad0d142d090677e2d1be0a903e5792f4df00e72"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.13.0/opc_1.13.0_linux_arm64.tar.gz"
      sha256 "c79f6397b1d9fc379975603b348687399d6217a6a210f6ca5e58660924e41c3f"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.13.0/opc_1.13.0_linux_x86_64.tar.gz"
      sha256 "46d04db137414fa0b12c1d6cf36160d85d5d3030de7663c92d796780d2c67a36"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end
end
