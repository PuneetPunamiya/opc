# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.11.2"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.11.2/opc_1.11.2_darwin_x86_64.tar.gz"
      sha256 "da54bb6fb3faefeed9c512970df141de303188ef71b23dfa690ff33e9c5c94e7"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.11.2/opc_1.11.2_darwin_arm64.tar.gz"
      sha256 "9751ba396d27d67ce82521c45cfad24b15d4ee87b3db599cce0e9a90ae50e748"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.11.2/opc_1.11.2_linux_arm64.tar.gz"
      sha256 "12659157012f2c9a7b364ae12ffebdb1ea6fcc01b8d58b3b0e14dc5b9d813f57"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.11.2/opc_1.11.2_linux_x86_64.tar.gz"
      sha256 "606e892841292f27dc0c9b28c9a63c4fd913493b6ed4eba5312bd5c1c3d6a2cd"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end
end
