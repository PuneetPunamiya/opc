# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.16.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.16.0/opc_1.16.0_darwin_x86_64.tar.gz"
      sha256 "83154528848ec077ec3a32ff5fcfd88c1def28ef9bd5c0fe16bc9bbe75cd6a07"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.16.0/opc_1.16.0_darwin_arm64.tar.gz"
      sha256 "423ac65065cb1d0ac8d3013f32fc74cdd16073a008cec73a00bfd900017c2545"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/openshift-pipelines/opc/releases/download/v1.16.0/opc_1.16.0_linux_x86_64.tar.gz"
        sha256 "3353c185bd25bdbb26b5d04136b3251e828afa832f02d5bfc262030ba4c335bf"

        def install
          bin.install "opc" => "opc"
          output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
          (bash_completion/"opc").write output
          output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
          (zsh_completion/"_opc").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/openshift-pipelines/opc/releases/download/v1.16.0/opc_1.16.0_linux_arm64.tar.gz"
        sha256 "03c4837a2973623ef06c850fbcbb3dc0b9a983724b7a76967052d7a1d4d89104"

        def install
          bin.install "opc" => "opc"
          output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
          (bash_completion/"opc").write output
          output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
          (zsh_completion/"_opc").write output
          prefix.install_metafiles
        end
      end
    end
  end
end
